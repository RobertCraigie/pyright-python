name: Test
on:
  push:
    branches:
      - main
    paths-ignore:
      - "*.md"
      - ".vscode/**"
      - "docs/**"
      - "LICENSE"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "*.md"
      - ".vscode/**"
      - "docs/**"
      - "LICENSE"
jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # NOTE: we only test different node versions on Python3.9 as
        # there shouldn't be any incompatabilities between python and node
        include:
        - node: 16
          python-version: '3.6'
          tox-env: py36
        - node: 16
          python-version: '3.7'
          tox-env: py37
        - node: 16
          python-version: '3.8'
          tox-env: py38
        - node: 12
          python-version: '3.9'
          tox-env: py39
        - node: 14
          python-version: '3.9'
          tox-env: py39
        - node: 16
          python-version: '3.9'
          tox-env: py39

    steps:
      - uses: actions/checkout@v1

      # TODO: ensure that pyright-python uses this node version
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install codecov==2.1.11 -r dev-requirements.txt

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('dev-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Ensure node version
        run: |
          python .github/scripts/check_node.py '${{ matrix.node }}'

      - name: Run tests
        run: |
          tox -e setup,${{ matrix.tox-env }},report

      - name: Upload coverage
        run: |
          codecov --file coverage.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: lint
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        python-version: [3.6]

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('dev-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Check linters
        run: |
          tox -e lint
